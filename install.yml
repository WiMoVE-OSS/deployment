# Install playbook for WiMoVE
---
# Install frr on the gateway and the route reflectors
- hosts: bgp
  name: "Base setup frr"
  tasks:
    - name: "Install frr"
      become: true
      ansible.builtin.apt:
        pkg:
          - frr
    - name: "Copy daemons"
      become: true
      ansible.builtin.copy:
        src: "common/frr/daemons"
        dest: "/etc/frr/daemons"
      register: frr_daemons
    - name: "Restart FRR"
      become: true
      ansible.builtin.service:
        name: frr
        state: restarted
      when: frr_daemons.changed
# FRR setup on the route reflectors
- hosts: route-reflectors
  name: "Copy FRR config"
  tasks:
    - name: "Copy frr configuration"
      become: true
      ansible.builtin.template:
        src: "route-reflector/frr/frr.conf.j2"
        dest: "/etc/frr/frr.conf"
      register: frr_configuration
    - name: "Restart FRR"
      become: true
      ansible.builtin.service:
        name: frr
        state: restarted
      when: frr_configuration.changed
# Setup all services on the gateway
- hosts: gateway
  name: "Configure gateway"
  tasks:
    - name: "Copy netplan configuration"
      become: true
      ansible.builtin.template:
        src: "gateway/netplan/00-installer-config.yaml.j2"
        dest: "/etc/netplan/00-installer-config.yaml"
      register: netplan_config
    - name: "Restart to apply netplan"
      become: true
      ansible.builtin.reboot:
      when: netplan_config.changed
    - name: "Copy frr configuration"
      become: true
      ansible.builtin.template:
        src: "gateway/frr/frr.conf.j2"
        dest: "/etc/frr/frr.conf"
      register: frr_configuration
    - name: "Restart FRR"
      become: true
      ansible.builtin.service:
        name: frr
        state: restarted
      when: frr_configuration.changed
    - ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
    - ansible.posix.sysctl:
        name: net.ipv4.conf.all.arp_ignore
        value: '1'
        sysctl_set: yes
    - ansible.posix.sysctl:
        name: net.ipv4.conf.all.arp_announce
        value: '2'
        sysctl_set: yes
    - name: "Copy nftables configuration"
      become: true
      ansible.builtin.template:
        src: "gateway/nft/nftables.conf.j2"
        dest: "/etc/nftables.conf"
      register: frr_configuration
    - name: "Apply NFTables config"
      become: true
      command: "/etc/nftables.conf"
    - name: "Install dnsmasq"
      become: true
      ansible.builtin.apt:
        pkg:
          - dnsmasq
    - name: "Copy dnsmasq configuration"
      become: true
      ansible.builtin.template:
        src: "gateway/dnsmasq/dnsmasq.conf.j2"
        dest: "/etc/dnsmasq.conf"
      register: dnsmasq_config
    - name: "Restart Dnsmasq"
      become: true
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
      when: dnsmasq_config.changed
# Copy WiMoVE package on to the Zyxel APs
- hosts: zyxel
  vars:
    ansible_scp_extra_args: -O
  roles:
    - openwrt
  name: "Copy wimove to zyxel"
  tasks:
    - name: copy wimove for NWA
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/tmp/wimove.ipk"
      with_fileglob: "./zyxel/wimove_*_mipsel*.ipk"
# Copy WiMoVE package on to the Linksys APs
- hosts: linksys
  vars:
    ansible_scp_extra_args: -O
  roles:
    - openwrt
  name: "Copy wimove to linksys"
  tasks:
    - name: copy wimove for ACS
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/tmp/wimove.ipk"
      with_fileglob: "./linksys/wimove_*_arm*.ipk"
#General OpenWRT setup
- hosts: openwrt
  vars:
    ansible_scp_extra_args: -O
  roles:
    - openwrt
  name: "Configuring OpenWRT"
  tasks:
    - name: remove wpad
      opkg:
        name: wpad-basic-wolfssl
        force: remove
        state: absent
    - name: remove logd
      opkg:
        name: logd
        force: remove
        state: absent
    - name: remove old wimove
      opkg:
        name: wimove
        force: remove
        state: absent
    - name: install hostapd
      opkg:
        name: hostapd
        force: overwrite
        state: present
    - name: install packages
      opkg:
        name: "{{ item }}"
        state: present
      loop:
          - syslog-ng
          - hostapd
          - hostapd-utils
          - frr
          - frr-bgpd
          - frr-zebra
          - frr-vtysh
          - frr-watchfrr
          - frr-staticd
          - luci-proto-vxlan
          - libubox-lua
          - lua-sha2
          - libuci-lua
          - luaposix
          - prometheus-node-exporter-lua
          - prometheus-node-exporter-lua-netstat
          - prometheus-node-exporter-lua-openwrt
          - prometheus-node-exporter-lua-wifi
          - prometheus-node-exporter-lua-wifi_stations
    - name: copy frr.conf
      ansible.builtin.copy:
        content: "{{ lookup ('template', './access-point/frr.j2') }}"
        dest: "/etc/frr/frr.conf"
    - name: copy vlan association
      ansible.builtin.copy:
        src: "./access-point/hostapd.vlan"
        dest: "/etc/hostapd.vlan"
    - name: copy prometheus node exporter config
      ansible.builtin.copy:
        src: "./access-point/prometheus-node-exporter-lua"
        dest: "/etc/config/prometheus-node-exporter-lua"
    - name: copy syslog-ng.conf
      ansible.builtin.copy:
        content: "{{ lookup ('template', './access-point/syslog-ng.conf.j2') }}"
        dest: "/etc/syslog-ng.conf"
    - name: Delete old wimove scripts
      ansible.builtin.file:
        path: /usr/bin/wimove
        state: absent
    - name: ensures wimove dir exists
      file:
        path: "/etc/wimove/"
        state: directory
    - name: copy wimove config
      ansible.builtin.copy:
        content: "{{ lookup ('template', './access-point/wimove-config.j2') }}"
        dest: "/etc/wimove/config"
    - name: copy daemons
      ansible.builtin.copy:
        src: "./access-point/daemons"
        dest: "/etc/frr/daemons"
    - name: copy init file
      ansible.builtin.copy:
        src: "./wimove"
        dest: "/etc/init.d/wimove"
        mode: "755"
    - name: remove wimove
      opkg:
        name:
          - wimove
        state: absent
    - name: install wimove
      ansible.builtin.command: opkg install /tmp/wimove.ipk
    - name: enable and start wimove
      service:
        name: wimove
        state: started
        enabled: yes
    - name: enable and start frr
      service:
        name: frr
        state: started
        enabled: yes
# Copy configuration for OpenWRT onto zyxel APs
- hosts: zyxel
  vars:
    ansible_scp_extra_args: -O
  roles:
    - openwrt
  name: "Applying openwrt config"
  tasks:
    - name: import openwrt config
      uci:
        command: import
        value: "{{ lookup ('template', './zyxel/conf-ota.j2') }}"
    - name: commit changes
      uci:
        command: commit
      notify:
        - reload wifi
        - reload network
    - name: wait for wifi
      wait_for_connection:
        timeout: 30
        delay: 5
    - name: reboot
      command: reboot
# Copy configuration for OpenWRT onto linksys APs
- hosts: linksys
  vars:
    ansible_scp_extra_args: -O
  roles:
    - openwrt
  name: "Applying openwrt config"
  tasks:
    - name: import openwrt config
      uci:
        command: import
        value: "{{ lookup ('template', './linksys/conf-ota.j2') }}"
    - name: commit changes
      uci:
        command: commit
      notify:
        - reload wifi
        - reload network
    - name: wait for wifi
      wait_for_connection:
        timeout: 30
        delay: 5
    - name: reboot
      command: reboot